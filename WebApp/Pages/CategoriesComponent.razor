@page "/categories"
@inject NavigationManager NavigationManager
@inject IViewCategoryUseCase ViewCategoryUseCase
@inject IDeleteCategory DeleteCategoryUseCase

<h3>Categories </h3>
<br />
<button type="button" class="btn btn-primary" @onclick="NavigateAddCategory">Add Category</button>
@if (categories != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td>@category.Description</td>
                    <td><button type="button" class="btn btn-toolbar" @onclick="() => EditCategory(category)">Edit</button></td>
                    <td><button type="button" class="btn btn-close" @onclick="() => DeleteCategory(category.CategoryId)"></button></td>
                </tr>
            }
        </tbody>
    </table>

}
@code {
    private List<Category>? categories;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadCategories();
    }
    private void NavigateAddCategory()
    {
        NavigationManager.NavigateTo("/addcategory");
    }
    private void EditCategory(Category category)
    {
        NavigationManager.NavigateTo($"/editcategory/{category.CategoryId}");
    }
    private void DeleteCategory(int categoryId)
    {
        DeleteCategoryUseCase.Delete(categoryId);
        LoadCategories();
    }
    private void LoadCategories()
    {
        categories = ViewCategoryUseCase.Execute()?.ToList();
    }
}